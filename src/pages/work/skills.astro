---
import App from '../../lib/app';
import { PageHero } from '../../lib/ui';
import { workSkillsById, WorkSkillId } from './_/skill';
import { workSkillTags } from './_/skillTag';
import TechSkillsHero from './_/skill/TechSkillsHero.astro';

// Sort all skills by recruiter value
const sortedSkills = Object.values(workSkillsById).sort(
  (a, b) => b.recruiterValue - a.recruiterValue
);

// Create a map of skill IDs to their categories
const skillCategories = new Map();
workSkillTags.forEach(tag => {
  tag.skillIds.forEach(skillId => {
    if (!skillCategories.has(skillId)) {
      skillCategories.set(skillId, { category: tag.category, icon: tag.icon });
    }
  });
});

type TechType =
  | 'Language'
  | 'Framework'
  | 'UI Library'
  | 'CSS Framework'
  | 'Core Technology'
  | 'State Management'
  | 'Data Management'
  | 'Build Tool'
  | 'Practice'
  | 'Version Control'
  | 'Methodology'
  | 'Soft Skill'
  | 'Graphics API'
  | 'Pattern'
  | 'Database'
  | 'Infrastructure'
  | 'Tool'
  | 'Role';

// Technology type classifications
const techTypes: Record<WorkSkillId, TechType> = {
  [WorkSkillId.AgileScrum]: 'Methodology',
  [WorkSkillId.Angular]: 'Framework',
  [WorkSkillId.Architecture]: 'Practice',
  [WorkSkillId.C]: 'Language',
  [WorkSkillId.ChakraUI]: 'UI Library',
  [WorkSkillId.CICD]: 'Practice',
  [WorkSkillId.CodeOptimization]: 'Practice',
  [WorkSkillId.CodeReview]: 'Practice',
  [WorkSkillId.ColdFusion]: 'Framework',
  [WorkSkillId.ContextAPI]: 'State Management',
  [WorkSkillId.CPlusPlus]: 'Language',
  [WorkSkillId.CSharp]: 'Language',
  [WorkSkillId.Dart]: 'Language',
  [WorkSkillId.DependencyInjection]: 'Pattern',
  [WorkSkillId.Flutter]: 'Framework',
  [WorkSkillId.Git]: 'Version Control',
  [WorkSkillId.HTML5CSS3]: 'Core Technology',
  [WorkSkillId.InversionOfControl]: 'Pattern',
  [WorkSkillId.Java]: 'Language',
  [WorkSkillId.JavaScript]: 'Language',
  [WorkSkillId.Mentoring]: 'Soft Skill',
  [WorkSkillId.MicrosoftSQLServer]: 'Database',
  [WorkSkillId.NextJs]: 'Framework',
  [WorkSkillId.NgrxStore]: 'State Management',
  [WorkSkillId.OpenGL]: 'Graphics API',
  [WorkSkillId.ProjectPlanning]: 'Soft Skill',
  [WorkSkillId.React]: 'Framework',
  [WorkSkillId.ReactQuery]: 'Data Management',
  [WorkSkillId.Redux]: 'State Management',
  [WorkSkillId.ResponsiveDesign]: 'Practice',
  [WorkSkillId.SAFe]: 'Methodology',
  [WorkSkillId.ScrumMaster]: 'Role',
  [WorkSkillId.SEO]: 'Practice',
  [WorkSkillId.SpringBoot]: 'Framework',
  [WorkSkillId.SpringMVC]: 'Framework',
  [WorkSkillId.SQL]: 'Language',
  [WorkSkillId.TailwindCSS]: 'CSS Framework',
  [WorkSkillId.TDD]: 'Practice',
  [WorkSkillId.TechnicalLeadership]: 'Soft Skill',
  [WorkSkillId.TechnicalWriting]: 'Practice',
  [WorkSkillId.Testing]: 'Practice',
  [WorkSkillId.TypeScript]: 'Language',
  [WorkSkillId.VersionOne]: 'Tool',
  [WorkSkillId.VMWare]: 'Infrastructure',
  [WorkSkillId.Webpack]: 'Build Tool',
};

// Color scheme for technology types
const typeColors: Record<TechType, string> = {
  Language: 'bg-purple-50 text-purple-600',
  Framework: 'bg-blue-50 text-blue-600',
  'UI Library': 'bg-pink-50 text-pink-600',
  'CSS Framework': 'bg-pink-50 text-pink-600',
  'Core Technology': 'bg-gray-50 text-gray-600',
  'State Management': 'bg-indigo-50 text-indigo-600',
  'Data Management': 'bg-indigo-50 text-indigo-600',
  'Build Tool': 'bg-amber-50 text-amber-600',
  Practice: 'bg-emerald-50 text-emerald-600',
  'Version Control': 'bg-orange-50 text-orange-600',
  Methodology: 'bg-teal-50 text-teal-600',
  'Soft Skill': 'bg-sky-50 text-sky-600',
  'Graphics API': 'bg-rose-50 text-rose-600',
  Pattern: 'bg-violet-50 text-violet-600',
  Database: 'bg-cyan-50 text-cyan-600',
  Infrastructure: 'bg-slate-50 text-slate-600',
  Tool: 'bg-zinc-50 text-zinc-600',
  Role: 'bg-teal-50 text-teal-600',
};
---

<App.Page>
  <App.PageHeader />
  <App.PageBody backgroundColor="bg-gray-100" class="flex flex-col min-h-screen">
    <PageHero
      title="Skills & Expertise"
      subtitle="A comprehensive list of my technical skills sorted by current market relevance"
    />

    <TechSkillsHero />

    <App.PageSection>
      <div class="max-w-7xl mx-auto">
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {
            sortedSkills.map(skill => {
              const categoryInfo = skillCategories.get(skill.id);
              const techType = techTypes[skill.id];
              const typeColor = typeColors[techType];
              return (
                <div class="bg-white overflow-hidden shadow rounded-lg hover:shadow-lg transition-shadow duration-200">
                  <div class="px-6 py-6 flex flex-col h-full">
                    <div class="flex-1">
                      <div class="flex items-center mb-2">
                        <h4 class="text-lg font-medium text-gray-900">{skill.name}</h4>
                      </div>
                      <div class="mb-3">
                        <span class={`inline-block px-2 py-1 text-xs rounded ${typeColor}`}>
                          {techType}
                        </span>
                      </div>
                      <p class="text-sm text-gray-500 mb-3">{skill.description}</p>
                      {skill.parentSkillId && (
                        <div class="flex items-center text-xs text-gray-500">
                          <span class="mr-2">Part of:</span>
                          <span class="font-medium text-gray-700">
                            {workSkillsById[skill.parentSkillId].name}
                          </span>
                        </div>
                      )}
                    </div>
                    {categoryInfo && (
                      <div class="flex items-center mt-4 pt-3 border-t border-gray-100">
                        <span class="text-lg mr-2">{categoryInfo.icon}</span>
                        <span class="text-xs text-gray-500">{categoryInfo.category}</span>
                      </div>
                    )}
                  </div>
                </div>
              );
            })
          }
        </div>
      </div>
    </App.PageSection>

    <App.PageFooter />
  </App.PageBody>
</App.Page>
